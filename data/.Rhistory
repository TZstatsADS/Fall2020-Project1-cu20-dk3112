setwd("~/Documents/Fall2020-Project1-cu20-dk3112/dev")
setwd("~/Documents/Fall2020-Project1-cu20-dk3112/data")
setwd("~/Documents/Fall2020-Project1-cu20-dk3112")
library(haven); library(tidyr); library(dplyr); library(cowplot)
library(tm); library(ggplot2); library(wordcloud)
ts_data = read_sav("data/cdf_ts/anes_timeseries_cdf.sav")
p20 = read_sav("data/2020_Pilot/anes_pilot_2020ets_sav.SAV")
p19 = read_sav("data/2019_Pilot/anes_pilot_2019.sav")
p18 = read_sav("data/2018_Pilot/anes_pilot_2018.sav")
p16 = read_sav("data/2016_Pilot/anes_pilot_2016.sav")
#Number of entries included
n_vals = unique(c(names(p16), names(p18), names(p19), names(p20), names(ts_data))) %>% length()
n_entries = sum(nrow(p16), nrow(p18),nrow(p19),nrow(p20),nrow(ts_data))
print(paste0("Total response entries: ", n_entries, ", total surveyed unique variables: ", n_vals, ". "))
rm(n_vals, n_entries)
ts_data_0 = ts_data %>% filter(VCF0701 == 2 | VCF0737 == 2)
p20_0 = p20 %>% filter(serious %in% c(4,5), reg1 %in% c(1,2))
p19_0 = p19 %>% filter(serious %in% c(4,5),
reg1a %in% c(1,2) | reg1b %in% c(1,2))
p18_0 = p18 %>% filter(nonserious %in% c(1,2),
honest %in% c(4,5),
reg %in% c(1,2))
p16_0 = p16 %>% filter(reg == 1)
neliminated_p = mean(1 - nrow(p16_0)/nrow(p16),
1 - nrow(p18_0)/nrow(p18),
1 - nrow(p19_0)/nrow(p19),
1 - nrow(p20_0)/nrow(p20),
1 - nrow(ts_data_0)/nrow(ts_data)) %>% round(digits = 4)
rm(ts_data, p20, p19, p18, p16)
print(paste0("Average percentage of invalid entries removed: ", neliminated_p * 100,"%."))
rm(neliminated_p)
ts_data_0 %>% filter(!is.na(ts_data_0$VCF0875)) %>%
select(Year = "VCF0004", Category = "VCF0875") %>%
group_by(Category, Year) %>% summarise(vot = n(), cat = as.factor(Category)) %>%
filter(cat %in% seq(0,9,1)) %>% ggplot() +
geom_bar(aes(x = Year, y = vot, fill = cat), stat = "identity") +
labs(title = "Most Important Problems based on historical data",
y = "Vote Counts") + theme_light()
attr(ts_data_0$VCF0875, 'labels') %>% stack()
stopwords = as_tibble(c("i", "me", "my", "myself", "we", "our", "ours", "ourselves", "you", "your", "yours", "yourself", "yourselves", "he", "him", "his", "himself", "she", "her", "hers", "herself", "it", "its", "itself", "they", "them", "their", "theirs", "themselves", "what", "which", "who", "whom", "this", "that", "these", "those", "am", "is", "are", "was", "were", "be", "been", "being", "have", "has", "had", "having", "do", "does", "did", "doing", "a", "an", "the", "and", "but", "if", "or", "because", "as", "until", "while", "of", "at", "by", "for", "with", "about", "against", "between", "into", "through", "during", "before", "after", "above", "below", "to", "from", "up", "down", "in", "out", "on", "off", "over", "under", "again", "further", "then", "once", "here", "there", "when", "where", "why", "how", "all", "any", "both", "each", "few", "more", "most", "other", "some", "such", "no", "nor", "not", "only", "own", "same", "so", "than", "too", "very", "s", "t", "can", "will", "just", "don", "should", "now"))
mip19 = p19_0$mip %>%
strsplit(split = " ") %>% unlist() %>% tolower() %>% as_tibble() %>%
anti_join(stopwords) %>% count(value) %>% arrange(desc(n))
mip19
mip19 %>% with(wordcloud(value, n, max.words = 70, min.freq = 1,
random.order = F, rot.per = 0.3,
use.r.layout = T, random.color = F,
colors = brewer.pal(9, "Set1")))
rm(mip19, stopwords)
appr_ts = ts_data_0 %>% select(year = VCF0004, approve = VCF0450, strength = VCF0451) %>% na.omit() %>% group_by_all() %>% summarise(count = n())
pred_appr = appr_ts %>% filter(approve == 1) %>% mutate(strength = factor(strength, levels = c(1,2,8), labels = c("strong", "weak", "no idea"))) %>% ggplot(aes(x = year, y = count)) + geom_point(aes(color = strength)) + geom_smooth(method = "lm", se = F, fullrange = T) + labs(title = "Presidents' Job Approval Count", x="Year", y="Job Approval Counts") + theme_light()
pred_disappr = appr_ts %>% filter(approve == 2) %>% mutate(strength = factor(strength, levels = c(4,3,8), labels = c("strong", "weak", "no idea"))) %>% ggplot(aes(x = year, y = count)) + geom_point(aes(color = strength)) + geom_smooth(method = "lm", se = F, fullrange = T) + labs(title = "Presidents' Job Disapproval Count", x = "Year", y = "Job Disapproval Counts") + theme_light()
pred_appr; pred_disappr
#plot_grid(pred_appr, pred_disappr, nrow = 2, ncol = 1)
rm(pred_appr, pred_disappr, appr_ts)
appobama <- as.integer(p16_0$presjob) %>% as_tibble() %>% ggplot(aes(x = value, y = ..density..)) + geom_histogram(binwidth = 0.3, color = "white") + geom_density(color = "blue") + labs(x = "Obama's Performance 2016", y = "") + theme_light()
apptp18 <- as.integer(p18_0$apppres) %>% as_tibble() %>% ggplot(aes(x = value, y = ..density..)) + geom_histogram(binwidth = 0.3, color = "white") + geom_density(color = "blue") + labs(x = "Trump's Performance 2018", y = "") + theme_light()
apptp19 <- append(as.integer(p19_0$apppres5), as.integer(p19_0$apppres7)) %>% as_tibble() %>% ggplot(aes(x = value, y = ..density..)) + geom_histogram(binwidth = 0.3, color = "white") + geom_density(color = "blue") + labs(x ="Trump's Performance 2019", y = "") + theme_light()
apptp20 <- as.integer(p20_0$apppres7) %>% as_tibble() %>% ggplot(aes(x = value, y = ..density..)) + geom_histogram(binwidth = 0.3, color = "white") + geom_density(color = "blue") + xlim(0,9) + labs(x = "Trump's Performance 2020", y = "") + theme_light()
plot_grid(appobama, apptp18, apptp19, apptp20)
rm(appobama, apptp18, apptp19, apptp20)
# 2020 Data
distrump20 = p20_0 %>% select(immpres7,covidpres7,healthcarepres7) %>%
mutate(Immigration = as.integer(immpres7),
Covid19 = as.integer(covidpres7),
Healthcare = as.integer(healthcarepres7)) %>%
select(Immigration, Covid19, Healthcare); i = 1
while(i <= nrow(distrump20)){
if (distrump20[i,2] > 7){
distrump20[i,2] = 4
}
if (distrump20[i,3] > 7){
distrump20[i,3] = 4
}
i = i+1
}
distrump20 <- distrump20 %>% pivot_longer(cols = c("Immigration", "Covid19", "Healthcare"), names_to = "type", values_to = "value") %>% arrange(type)
ggplot(distrump20) + geom_density(aes(x = value, y = ..density.., color = type)) + labs(title = "2020 Important Problems Layout", subtitle = "Higher score means opposition, 4 means don't care", x = "", y = "Density", color = "Category") + theme_light() -> plot1
# 2019 Data
tphc = p19_0$hlthcare1 %>% as.integer() +
p19_0$hlthcare2 %>% as.integer()
tphc = tphc %>% replace_na(5)
tpimp = p19_0$immpres5 %>% as.integer(); i=1
while(i <= length(tpimp)){
if (is.na(tpimp[i])){
tpimp[i] <- as.integer(p19_0$immpres7)[i]
}
i = i+1
}
distrump19 = as_tibble(tphc) %>% mutate(cat = rep("Healthcare", length(tphc))) %>% rbind(as_tibble(tpimp) %>% mutate(cat = rep("Immigration", length(tpimp))))
ggplot(distrump19, aes(x = value, y = ..density..)) + geom_density(aes(color = cat), alpha = 0.6) + labs(title = "2019 Important Problems Layout", subtitle = "Higher score means opposition, 5 means don't care", x = "", y = "Density", color = "Category") + theme_light() -> plot2
rm(tphc, tpimp)
# 2018 Data
hc18 = round(((p18_0$acarepeal %>% as.integer())*100/7), digits = 0) %>% as.integer()
hc18 = hc18 %>% as_tibble() %>% mutate(cat = rep("Healthcare", length(hc18)))
im18 = p18_0$ftimmig %>% as.integer()
distrump18 = im18 %>% as_tibble() %>% mutate(cat = rep("Immigration", length(im18))) %>% rbind(hc18)
ggplot(distrump18, aes(x = value, y = ..density..)) + geom_density(aes(color = cat), alpha = 0.6) + labs(title = "2018 Important Problems Layout",subtitle = "Higher score means opposition, in favor of Obama Care and immigration", x = "", y = "Density", color = "Category") + theme_light() -> plot3
rm(hc18, im18)
# 2016 Data
disob2016 = as.integer(p16_0$immig_legal) %>% as_tibble()
ggplot(disob2016) + geom_density(aes(x = value, y = ..density..)) + labs(title = "2016 Immigration Appreciation Density",subtitle = "Higher score means opposition, in favor of expelling immigrants.", x = "", y = "Density") + theme_light() -> plot4
plot_grid(plot1,plot2, ncol = 1, nrow = 2)
plot_grid(plot3,plot4, ncol = 1, nrow = 2)
rm(disob2016, distrump18, distrump19, distrump20, i)
rm(plot1,plot2,plot3,plot4)
recall_major = ts_data_0 %>% select(year = VCF0004, ans = VCF1009, meaning = VCF1009) %>% na.omit() %>% mutate(ans = as.integer(ans), meaning = labelled::unlabelled(meaning)) %>% group_by(year, meaning) %>% summarise(ans = n())
plot1 <-
ggplot(recall_major) +
geom_point(aes(x = year, y = ans, color = meaning)) +
labs(title = "Number of successful recalls of major party candidates",
x = "Year", y = "Count", color = "Meaning") +
theme_light() +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 7),
legend.spacing.y = unit(5,"points"),
legend.key.height = unit(10,"points"))
recall_party = ts_data_0 %>% select(year = VCF0004, ans = VCF1010) %>% na.omit() %>% mutate(meaning = labelled::unlabelled(ans), ans = as.integer(ans)) %>% group_by(year, meaning) %>% summarise(ans = n())
plot2 <-
ggplot(recall_party) +
geom_point(aes(x = year, y = ans, color = meaning)) +
labs(title = "Number of successful recalls of own/other major party candidates",
x = "Year", y = "Count", color = "Meaning") +
theme_light() +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 7),
legend.spacing.y = unit(5,"points"),
legend.key.height = unit(10,"points"))
recall_senate = ts_data_0 %>% select(year = VCF0004, ans = VCF9067) %>% na.omit() %>% mutate(meaning = labelled::unlabelled(ans), ans = as.integer(ans)) %>% group_by(year, meaning) %>% summarise(ans = n())
plot3 <-
ggplot(recall_senate) +
geom_point(aes(x = year, y = ans, color = meaning)) +
labs(title = "Number of successful recalls for Senate candidates",
x = "Year", y = "Count", color = "Meaning") +
theme_light() +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 7),
legend.spacing.y = unit(5,"points"),
legend.key.height = unit(10,"points"))
recall_house = ts_data_0 %>% select(year = VCF0004, ans = VCF0976) %>% na.omit() %>% mutate(meaning = labelled::unlabelled(ans), ans = as.integer(ans)) %>% group_by(year, meaning) %>% summarise(ans = n())
plot4 <-
ggplot(recall_house) +
geom_point(aes(x = year, y = ans, color = meaning))+
labs(title = "Number of successful recalls for House candidates",
x = "Year", y = "Count", color = "Meaning") +
theme_light() +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 7),
legend.spacing.y = unit(5,"points"),
legend.key.height = unit(10,"points"))
plot_grid(plot1,plot2, ncol = 1, nrow = 2)
plot_grid(plot3,plot4, ncol = 1, nrow = 2)
rm(recall_house, recall_major, recall_party, recall_senate)
rm(plot1,plot2,plot3,plot4)
